version: "3.5"
# Example Docker Compose config file for PhotoPrism (Linux / AMD64)
#
# Note:
# - Running PhotoPrism on a server with less than 4 GB of swap space or setting a memory/swap limit can cause unexpected
#   restarts ("crashes"), for example, when the indexer temporarily needs more memory to process large files.
# - If you install PhotoPrism on a public server outside your home network, please always run it behind a secure
#   HTTPS reverse proxy such as Traefik or Caddy. Your files and passwords will otherwise be transmitted
#   in clear text and can be intercepted by anyone, including your provider, hackers, and governments:
#   https://docs.photoprism.app/getting-started/proxies/traefik/
#
# Documentation : https://docs.photoprism.app/getting-started/docker-compose/
# Docker Hub URL: https://hub.docker.com/r/photoprism/photoprism/
#
# DOCKER COMPOSE COMMAND REFERENCE
# see https://docs.photoprism.app/getting-started/docker-compose/#command-line-interface
# --------------------------------------------------------------------------
# Start    | docker-compose up -d
# Stop     | docker-compose stop
# Update   | docker-compose pull
# Logs     | docker-compose logs --tail=25 -f
# Terminal | docker-compose exec photoprism bash
# Help     | docker-compose exec photoprism photoprism help
# Config   | docker-compose exec photoprism photoprism config
# Reset    | docker-compose exec photoprism photoprism reset
# Backup   | docker-compose exec photoprism photoprism backup -a -i
# Restore  | docker-compose exec photoprism photoprism restore -a -i
# Index    | docker-compose exec photoprism photoprism index
# Reindex  | docker-compose exec photoprism photoprism index -f
# Import   | docker-compose exec photoprism photoprism import
#
# To search originals for faces without a complete rescan:
# docker-compose exec photoprism photoprism faces index
#
# All commands may have to be prefixed with "sudo" when not running as root.
# This will point the home directory shortcut ~ to /root in volume mounts.

services:
  photoprism:
    ## Use photoprism/photoprism:preview for testing preview builds:
    image: photoprism/photoprism:latest
    depends_on:
      - mariadb
    ## Don't enable automatic restarts until PhotoPrism has been properly configured and tested!
    ## If the service gets stuck in a restart loop, this points to a memory, filesystem, network, or database issue:
    ## https://docs.photoprism.app/getting-started/troubleshooting/#fatal-server-errors
    # restart: unless-stopped
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    ports:
      - "2342:2342" # HTTP port (host:container)
    labels:
      # Explicitly tell Traefik to expose this container (https://doc.traefik.io/traefik/providers/docker/#exposedbydefault)
      - "traefik.enable=true"
      # The domain the service will respond to
      - "traefik.http.routers.photoprism.rule=Host(`photos.activescott.com`)"
      - "traefik.http.routers.photoprism.tls=true"

    environment:
      PHOTOPRISM_ADMIN_PASSWORD: "insecure" # INITIAL PASSWORD FOR "admin" USER, MINIMUM 8 CHARACTERS
      PHOTOPRISM_AUTH_MODE: "password" # authentication mode (public, password)
      #PHOTOPRISM_SITE_URL: "http://localhost:2342/"  # public server URL incl http:// or https:// and /path, :port is optional
      PHOTOPRISM_SITE_URL: "https://photos.activescott.com:2343/" # public server URL incl http:// or https:// and /path, :port is optional
      PHOTOPRISM_ORIGINALS_LIMIT: 5000 # file size limit for originals in MB (increase for high-res video)
      PHOTOPRISM_HTTP_COMPRESSION: "gzip" # improves transfer speed and bandwidth utilization (none or gzip)
      PHOTOPRISM_LOG_LEVEL: "info" # log level: trace, debug, info, warning, error, fatal, or panic
      PHOTOPRISM_READONLY: "false" # do not modify originals directory (reduced functionality)
      PHOTOPRISM_EXPERIMENTAL: "false" # enables experimental features
      PHOTOPRISM_DISABLE_CHOWN: "false" # disables updating storage permissions via chmod and chown on startup
      PHOTOPRISM_DISABLE_WEBDAV: "false" # disables built-in WebDAV server
      PHOTOPRISM_DISABLE_SETTINGS: "false" # disables settings UI and API
      PHOTOPRISM_DISABLE_TENSORFLOW: "false" # disables all features depending on TensorFlow
      PHOTOPRISM_DISABLE_FACES: "false" # disables face detection and recognition (requires TensorFlow)
      PHOTOPRISM_DISABLE_CLASSIFICATION: "false" # disables image classification (requires TensorFlow)
      PHOTOPRISM_DISABLE_RAW: "false" # disables indexing and conversion of RAW files
      PHOTOPRISM_RAW_PRESETS: "false" # enables applying user presets when converting RAW files (reduces performance)
      PHOTOPRISM_JPEG_QUALITY: 85 # a higher value increases the quality and file size of JPEG images and thumbnails (25-100)
      PHOTOPRISM_DETECT_NSFW: "false" # automatically flags photos as private that MAY be offensive (requires TensorFlow)
      PHOTOPRISM_UPLOAD_NSFW: "true" # allows uploads that MAY be offensive (no effect without TensorFlow)
      # PHOTOPRISM_DATABASE_DRIVER: "sqlite"         # SQLite is an embedded database that doesn't require a server
      PHOTOPRISM_DATABASE_DRIVER: "mysql" # use MariaDB 10.5+ or MySQL 8+ instead of SQLite for improved performance
      PHOTOPRISM_DATABASE_SERVER: "mariadb:3306" # MariaDB or MySQL database server (hostname:port)
      PHOTOPRISM_DATABASE_NAME: "photoprism" # MariaDB or MySQL database schema name
      PHOTOPRISM_DATABASE_USER: "photoprism" # MariaDB or MySQL database user name
      PHOTOPRISM_DATABASE_PASSWORD: "insecure" # MariaDB or MySQL database user password
      PHOTOPRISM_SITE_CAPTION: "AI-Powered Photos App"
      PHOTOPRISM_SITE_DESCRIPTION: "" # meta site description
      PHOTOPRISM_SITE_AUTHOR: "" # meta site author
      ## Run/install on first startup (options: update gpu tensorflow davfs clitools clean):
      # PHOTOPRISM_INIT: "gpu tensorflow"
      ## Hardware Video Transcoding (for sponsors only due to high maintenance and support costs):
      PHOTOPRISM_FFMPEG_ENCODER: "intel" # FFmpeg encoder ("software", "intel", "nvidia", "apple", "raspberry")
      # PHOTOPRISM_FFMPEG_BITRATE: "32"              # FFmpeg encoding bitrate limit in Mbit/s (default: 50)
      ## Run as a non-root user after initialization (supported: 0, 33, 50-99, 500-600, and 900-1200):
      # PHOTOPRISM_UID: 1000
      # PHOTOPRISM_GID: 1000
      # PHOTOPRISM_UMASK: 0000
    ## Start as non-root user before initialization (supported: 0, 33, 50-99, 500-600, and 900-1200):
    # user: "1000:1000"
    ## Share hardware devices with FFmpeg and TensorFlow (optional):
    devices:
      - "/dev/dri:/dev/dri" # Intel QSV
    #  - "/dev/nvidia0:/dev/nvidia0"                 # Nvidia CUDA
    #  - "/dev/nvidiactl:/dev/nvidiactl"
    #  - "/dev/nvidia-modeset:/dev/nvidia-modeset"
    #  - "/dev/nvidia-nvswitchctl:/dev/nvidia-nvswitchctl"
    #  - "/dev/nvidia-uvm:/dev/nvidia-uvm"
    #  - "/dev/nvidia-uvm-tools:/dev/nvidia-uvm-tools"
    #  - "/dev/video11:/dev/video11"                 # Video4Linux Video Encode Device (h264_v4l2m2m)
    working_dir: "/photoprism" # do not change or remove
    ## Storage Folders: "~" is a shortcut for your home directory, "." for the current directory
    volumes:
      # "/host/folder:/photoprism/folder"                # Example
      #- "~/Pictures:/photoprism/originals"              # Original media files (DO NOT REMOVE)
      - "/share/CACHEDEV1_DATA/scott-photos/organized-originals:/photoprism/originals"
      # - "/example/family:/photoprism/originals/family" # *Additional* media folders can be mounted like this
      # - "~/Import:/photoprism/import"                  # *Optional* base folder from which files can be imported to originals
      - "/share/CACHEDEV1_DATA/scott-photos/import:/photoprism/import"
      - "/share/CACHEDEV1_DATA/app-data/phtotoprism/storage:/photoprism/storage" # *Writable* storage folder for cache, database, and sidecar files (DO NOT REMOVE)

    # Networking here ensures a physical address and a private address to DB/proxy:
    mac_address: AA:AA:AA:90:d8:c0
    networks:
      photos_physical:
        ipv4_address: 10.1.111.20
        # priority higher than 0 makes it get mounted first, and the mac address assigned there.
        priority: 100
      photos_private:

  ## Database Server (recommended)
  ## see https://docs.photoprism.app/getting-started/faq/#should-i-use-sqlite-mariadb-or-mysql
  mariadb:
    ## If MariaDB gets stuck in a restart loop, this points to a memory or filesystem issue:
    ## https://docs.photoprism.app/getting-started/troubleshooting/#fatal-server-errors
    restart: unless-stopped
    image: mariadb:10.8
    security_opt: # see https://github.com/MariaDB/mariadb-docker/issues/434#issuecomment-1136151239
      - seccomp:unconfined
      - apparmor:unconfined
    command: mysqld --innodb-buffer-pool-size=512M --transaction-isolation=READ-COMMITTED --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-connections=512 --innodb-rollback-on-timeout=OFF --innodb-lock-wait-timeout=120
    ## Never store database files on an unreliable device such as a USB flash drive, an SD card, or a shared network folder:
    volumes:
      - "/share/CACHEDEV1_DATA/app-data/phtotoprism/var-lib-mysql:/var/lib/mysql" # DO NOT REMOVE
    environment:
      MARIADB_AUTO_UPGRADE: "1"
      MARIADB_INITDB_SKIP_TZINFO: "1"
      MARIADB_DATABASE: "photoprism"
      MARIADB_USER: "photoprism"
      MARIADB_PASSWORD: "insecure"
      MARIADB_ROOT_PASSWORD: "insecure"

    networks:
      photos_private:

  traefik:
    # this provides a reverse proxy with certs so https can be done to PhotoPrism
    image: traefik:v2.5
    restart: unless-stopped
    ports:
      - "443:443"
    volumes:
      # NOTE: ALL traefik configuration is '/etc/traefik/traefik.yaml' file (it is mutually exclusive with inline docker-file command configuration). See https://doc.traefik.io/traefik/getting-started/configuration-overview/#the-static-configuration
      - "/share/CACHEDEV1_DATA/app-data/phtotoprism/traefik:/etc/traefik"
      - "/share/CACHEDEV1_DATA/app-data/phtotoprism/traefik/data:/data"
      - "/var/run/docker.sock:/var/run/docker.sock"
      # Certificates on QNAP:
      - /share/CACHEDEV1_DATA/app-data/letsencrypt:/etc/letsencrypt:ro

    # Networking here ensures a physical address and a private address to DB/proxy:
    mac_address: AA:AA:AA:90:d8:c1
    networks:
      photos_physical:
        ipv4_address: 10.1.111.21
        # priority higher than 0 makes it get mounted first, and the mac address assigned there.
        priority: 100
      photos_private:

networks:
  # Network setup here is pretty complex. We use a physical network to allow PhotoPrism and Proxy to have a dedicated IP and mac address.
  # ...then a private network so that photoprism can talk to the DB (mainly) and proxy over a private connection
  photos_physical:
    # use macvlan allowing physical connection of each container to the network
    name: photos_physical
    driver: macvlan
    driver_opts:
      parent: eth0
    ipam:
      config:
        - subnet: 10.1.111.0/24
  photos_private:
    # this is just a private network for the DB & Proxy to connect to photoprism on.
    # DO NOT connect the DB to any other network!
