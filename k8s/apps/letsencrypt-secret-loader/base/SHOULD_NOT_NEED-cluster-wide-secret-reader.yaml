# Role allows reading the secret
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  # "namespace" omitted since ClusterRoles are not namespaced
  name: letsencrypt-secret-reader
  namespace: letsencrypt-secret-loader
rules:
- apiGroups: [""]
  # at the HTTP level, the name of the resource for accessing Secret
  # objects is "secrets"
  resources: ["secrets"]
  # confine this to the secret name:
  resourceNames: ["cert-activescott-com"]
  verbs: ["get", "watch", "list"]
---
# This cluster role binding allows anyone to read secret in any namespace.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  # "namespace" omitted since ClusterRoleBindings are not namespaced
  name: read-letsencrypt-secret-global
  namespace: letsencrypt-secret-loader
roleRef:
  kind: ClusterRole
  name: letsencrypt-secret-reader
  apiGroup: rbac.authorization.k8s.io  
subjects:
  # this is the default service account assigned to all pods.
  - kind: ServiceAccount
    name: default
    namespace: default

