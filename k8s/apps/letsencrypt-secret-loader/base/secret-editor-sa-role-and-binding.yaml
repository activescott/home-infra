# service account (SA) used for the CronJob to edit the secret.
apiVersion: v1
kind: ServiceAccount
metadata:
  name: letsencrypt-secret-loader-sa
---
# defines what permissions are granted to the SA
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: secret-loader
rules:
- apiGroups: [""]
  resources: ["secrets"]
  # NOTE: when confining resourceNames it wouldn't allow create!
  #resourceNames: ["cert-activescott-com"]
  verbs: ["create"]
- apiGroups: [""]
  resources: ["secrets"]
  # confine this to the secret name:
  resourceNames: ["cert-activescott-com"]
  verbs: ["update", "get", "patch"]
---
# binds the Role to the SA:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: load-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: secret-loader
subjects:
  - kind: ServiceAccount
    name: letsencrypt-secret-loader-sa
---
# This adds it for **TARGET** namespace (where the ingress who uses the secret is)
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: loader-can-edit-secrets-in-target-namespace
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: secret-loader
subjects:
  - kind: ServiceAccount
    name: letsencrypt-secret-loader-sa
  