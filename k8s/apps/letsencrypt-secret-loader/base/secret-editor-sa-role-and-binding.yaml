# service account (SA) used for the CronJob to edit the secret.
apiVersion: v1
kind: ServiceAccount
metadata:
  name: letsencrypt-secret-loader-sa
  namespace: letsencrypt-secret-loader
---
# defines what permissions are granted to the SA
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  # "namespace" omitted since ClusterRoles are not namespaced
  name: secret-loader
  namespace: letsencrypt-secret-loader
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    # confine this to the secret name:
    # NOTE: when confining resourceNames it wouldn't allow create!
    #resourceNames: ["cert-activescott-com"]
    verbs: ["create"]
  - apiGroups: [""]
    resources: ["secrets"]
    # confine this to the secret name:
    resourceNames: ["cert-activescott-com"]
    verbs: ["update", "get", "patch"]
---
# binds the Role to the SA:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: load-secrets
  namespace: letsencrypt-secret-loader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: secret-loader
subjects:
  - kind: ServiceAccount
    name: letsencrypt-secret-loader-sa
    namespace: letsencrypt-secret-loader
---
# This adds it for **photoprism** namespace (where the ingress who uses the secret is)
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: loader-can-edit-secrets-in-photoprism
  # NOTE: the target namespace here!
  namespace: photoprism
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: secret-loader
subjects:
  - kind: ServiceAccount
    name: letsencrypt-secret-loader-sa
    namespace: letsencrypt-secret-loader
