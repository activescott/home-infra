apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: erigon
  namespace: eth
  labels:
    app: eth
    role: execution-client
spec:
  serviceName: erigon
  replicas: 1
  selector:
    matchLabels:
      app: eth
      role: execution-client-erigon
  template:
    metadata:
      labels:
        app: eth
        role: execution-client-erigon
      annotations:
        # from erigon logs: Enabling metrics export to prometheus    path=http://127.0.0.1:6060/debug/metrics/prometheus
        prometheus.io/scrape: "true"
        prometheus.io/port: "6060"
        prometheus.io/path: "/debug/metrics/prometheus"
    spec:
      containers:
        - name: erigon
          # tags: https://hub.docker.com/r/thorax/erigon/tags
          # NOTE: they provide a `stable` tag, but it's very old and they have detailed release notes at https://github.com/ledgerwatch/erigon/releases?page=1 and recommend to other users (assuming not using docker) to use a current release
          image: thorax/erigon:v2.57.2

          resources:
            limits:
              memory: "24Gi"
            requests:
              memory: "4Gi"          

          ports:
            # https://github.com/ledgerwatch/erigon#default-ports-and-firewalls
            # > Typically, 30303 and 30304 are exposed to the internet to allow incoming peering connections. 
            # > 9090 is exposed only internally for rpcdaemon or other connections, (e.g. rpcdaemon -> erigon). 
            # > 8551 (JWT authenticated) is exposed only internally for Engine API JSON-RPC queries from the Consensus Layer node.
            # eth/68 peering:
            - containerPort: 31303
            # eth/67 peering:
            - containerPort: 31304
            # Snap sync (Bittorrent):
            - containerPort: 43069

            # gRPC Server:
            - containerPort: 9090
            # incoming gRPC Connections:
            - containerPort: 9091
            # Engine API (JWT auth):
            - containerPort: 8551
            # HTTP & WebSockets & GraphQL:
            - containerPort: 9045
            # 6060 is shown in the logs for metrics like: 'Enabling metrics export to prometheus    path=http://127.0.0.1:6060/debug/metrics/prometheus'
            - containerPort: 6060
          
          # paths can be discovered at https://github.com/ledgerwatch/erigon/blob/devel/Dockerfile
          command: ["/usr/local/bin/erigon"]
          # Basic Command line Options: https://erigon.gitbook.io/erigon/eli5-nodes/how-to-run-a-gnosis-chain-node#configure-erigon-client
          # ALL command line options: https://erigon.gitbook.io/erigon/advanced-usage/command-line-options
          args:
            #--port value Network listening port (default: 30303)
            # NOTE: MUST match containerPort above!
            - --port=31303
            #--p2p.protocol value [ --p2p.protocol value ] Version of eth p2p protocol (default: 68, 67)
            #--p2p.allowed-ports value [ --p2p.allowed-ports value ] Allowed ports to pick for different eth p2p protocol versions as follows <porta>,<portb>,..,<porti> (default: 30303, 30304, 30305, 30306, 30307)

            #--torrent.port value Port to listen and serve BitTorrent protocol (default: 42069)
            # NOTE: MUST match containerPort above!
            - --torrent.port=43069

            # --http.port value HTTP-RPC server listening port (default: 8545)
            # NOTE: change http.port because k8s nodeport restriction: spec.ports[5].nodePort: Invalid value: 8545: provided port is not in the valid range. The range of valid ports is 9000-65535
            - --http.port=9045
            - --http.api=eth,web3,net,debug,trace,txpool,admin
            
            # Publish a metrics endpoint for prometheus per https://github.com/ledgerwatch/erigon/blob/devel/cmd/prometheus/Readme.md
            - --metrics
            - '--metrics.addr=0.0.0.0'
            # NOTE: MUST match containerPort above!
            - '--metrics.port=6060'

            # The intent here is that it will allow erigon to discover the proper external IP
            # --nat value NAT port mapping mechanism (any|none|upnp|pmp|stun|extip:<IP>)
            - --nat
            - stun

            # --datadir value Data directory for the databases (default: /.local/share/erigon)
            - --datadir
            - /data/erigon

            # name of the network to join (default: "mainnet")
            # --chain "main"                                            

            # They said this is good for a full node (which is sufficient for validating), and not as big as an "archive node"
            - --prune=hrtc

            # forced our ZFS RecordSize to 64KB
            # more on zfs record size: https://jrs-s.net/2019/04/03/on-zfs-recordsize/
            - --db.pagesize
            - 64K
            
            # snapshots is using bittorent to sync chaindata: see https://erigon.gitbook.io/erigon/advanced-usage/downloader
            # Default: use snapshots "true" for Mainnet, Goerli, Gnosis Chain and Chiado. use snapshots "false" in all other cases (default: true)
            - --snapshots

            # enable RPC API: https://erigon.gitbook.io/erigon/advanced-usage/rpcdaemon#built-in-rpcdaemon
            - --http
            - '--http.vhosts=*'
            - '--http.addr=0.0.0.0'

          # container-level volume mounts:
          volumeMounts:
            # https://erigon.gitbook.io/erigon/advanced-usage/configure-erigon#datadir-structure
            # Datadir structure:
            # - chaindata: recent blocks, state, recent state history. low-latency disk recommended.
            # - snapshots: old blocks, old state history. can symlink/mount it to cheaper disk. mostly immutable. must have ~100gb free space (for merge recent files to bigger one).
            # - temp: can grow to ~100gb, but usually empty. can symlink/mount it to cheaper disk.
            # - txpool: pending transactions. safe to remove.
            # - nodes: p2p peers. safe to remove.                       
            - mountPath: /data/erigon
              name: erigon
            - mountPath: /data/erigon/chaindata
              name: chaindata
    
      securityContext:
        # this user is on the node's os as the file system owner
        # https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
        runAsUser:  4010
        runAsGroup: 4010
        fsGroup:    4010

      # pod-level volumes:
      volumes:
      # default:
        - name: erigon
          hostPath:
            path: /mnt/thedatapool/no-backup/app-data/erigon
        - name: chaindata
          hostPath:
            path: /mnt/ssdspace/eth-exec/erigon/chaindata
